apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    sourceSets {
        main {
            // manifest.srcFile 'AndroidManifest.xml'
            /*java.srcDirs = ['src']
            Resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']*/
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    defaultConfig {
        applicationId "com.e7yoo.e7"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 60
        versionName "3.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    signingConfigs {
        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def keyDir = properties.getProperty('signing.release.key')
            def keyPwd = properties.getProperty('signing.release.keyPwd')
            def alias = properties.getProperty('signing.release.alias')
            def aliasPwd = properties.getProperty('signing.release.aliasPwd')
            storeFile file(keyDir)
            storePassword keyPwd
            keyAlias alias
            keyPassword aliasPwd
        }

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'org.litepal.android:core:1.3.2'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support:design:26.+'
    compile 'com.android.support:support-vector-drawable:26.+'
    compile 'com.android.support:support-v4:26.+'
    compile 'com.sdsmdg.tastytoast:tastytoast:0.1.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.jph.takephoto:takephoto_library:4.0.3'
    compile 'me.drakeet.materialdialog:library:1.3.1'
    testCompile 'junit:junit:4.12'
}
